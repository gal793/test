package ru.sbrf.autotest.timeout;

import io.cucumber.plugin.EventListener;
import io.cucumber.plugin.event.*;

import java.time.Duration;
import java.util.concurrent.*;

public class ScenarioTimeoutPlugin implements EventListener {

    /** сколько дать сценарию (секунд) */
    private static final long TIMEOUT_SEC = 30;

    private final ScheduledExecutorService es =
            Executors.newSingleThreadScheduledExecutor(r -> {
                Thread t = new Thread(r, "scenario-timeout");
                t.setDaemon(true);
                return t;
            });

    private volatile ScheduledFuture<?> current;

    @Override
    public void setEventPublisher(EventPublisher publisher) {
        publisher.registerHandlerFor(TestCaseStarted.class,  this::startTimer);
        publisher.registerHandlerFor(TestCaseFinished.class, this::stopTimer);
    }

    private void startTimer(TestCaseStarted ev) {
        current = es.schedule(() -> {
            System.err.println("[TIMEOUT] Scenario «" + ev.getTestCase().getName()
                    + "» exceeded " + TIMEOUT_SEC + " s – interrupting thread.");
            Thread.currentThread().getThreadGroup().interrupt();  // прерывает сценарный поток
        }, TIMEOUT_SEC, TimeUnit.SECONDS);
    }

    private void stopTimer(TestCaseFinished ev) {
        if (current != null) current.cancel(true);
    }
}
